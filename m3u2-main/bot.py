import config
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton

from random import randint
import sqlite3

bot = telebot.TeleBot(config.API_TOKEN)

def send_info(bot, message, row):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∏–ª—å–º–µ."""
    info = f"""
üìçTitle of movie: {row["title"]}
üìçYear: {row["year"]}
üìçGenres: {row["genre"]}
üìçRating IMDB: {row["rating"]}

üîªüîªüîªüîªüîªüîªüîªüîªüîªüîªüîª
{row["overview"]}
"""
    bot.send_photo(message.chat.id, row["img"])
    bot.send_message(message.chat.id, info, reply_markup=add_to_favorite(row["id"]))


def add_to_favorite(id):
    """–°–æ–∑–¥–∞–µ—Ç InlineKeyboard –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å–º–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ."""
    markup = InlineKeyboardMarkup()
    markup.row_width = 1
    markup.add(InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å–º –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ üåü", callback_data=f'favorite_{id}'))
    return markup


def main_markup():
    """–°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π /random –∏ /random_genre."""
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton('/random'))
    markup.add(KeyboardButton('/random_genre'))  # –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ /random_genre
    markup.add(KeyboardButton('/favorites'))
    return markup


@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ InlineKeyboard."""
    if call.data.startswith("favorite"):
        movie_id = call.data[call.data.find("_") + 1:]
        con = sqlite3.connect("movie_database.db")
        with con:
            cur = con.cursor()
            cur.execute("SELECT * FROM favorites WHERE user_id = ? AND movie_id = ?", (call.message.chat.id, movie_id))
            if cur.fetchone() is not None:
                bot.answer_callback_query(call.id, "–≠—Ç–æ—Ç —Ñ–∏–ª—å–º —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!", show_alert=True)
                cur.close()
                return

            cur.execute("INSERT INTO favorites (user_id, movie_id) VALUES (?, ?)", (call.message.chat.id, movie_id))
            con.commit()
            cur.close()
            bot.answer_callback_query(call.id, "–§–∏–ª—å–º –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ! üéâ")
        print(f"Movie {movie_id} added to favorites for user {call.message.chat.id}")


@bot.message_handler(commands=['start'])
def send_welcome(message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É."""
    bot.send_message(message.chat.id,
                     """Hello! You're welcome to the best Movie-Chat-Botüé•! 
Here you can find 1000 movies üî• 
Click /random to get a random movie 
Or write the title of the movie and I will try to find it! üé¨""",
                     reply_markup=main_markup())


@bot.message_handler(commands=['random'])
def random_movie(message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    con = sqlite3.connect("movie_database.db")
    con.row_factory = sqlite3.Row
    with con:
        cur = con.cursor()
        cur.execute("SELECT * FROM movies ORDER BY RANDOM() LIMIT 1")
        row = cur.fetchone()

        if row:
            send_info(bot, message, row)
        else:
            bot.send_message(message.chat.id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç —Ñ–∏–ª—å–º–æ–≤.")
        cur.close()


@bot.message_handler(commands=['random_genre'])
def random_genre(message):
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∂–∞–Ω—Ä –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º –∏–∑ —ç—Ç–æ–≥–æ –∂–∞–Ω—Ä–∞."""
    bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∂–∞–Ω—Ä —Ñ–∏–ª—å–º–∞:")
    bot.register_next_step_handler(message, send_random_movie_by_genre)


def send_random_movie_by_genre(message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∂–∞–Ω—Ä—É."""
    genre = message.text.strip().lower()  # –ü–æ–ª—É—á–∞–µ–º –∂–∞–Ω—Ä –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    con = sqlite3.connect("movie_database.db")
    con.row_factory = sqlite3.Row
    with con:
        cur = con.cursor()
        cur.execute("SELECT * FROM movies WHERE LOWER(genre) LIKE ?", ('%' + genre + '%',))  # –ò—â–µ–º —Ñ–∏–ª—å–º—ã –ø–æ –∂–∞–Ω—Ä—É
        rows = cur.fetchall()

        if rows:
            random_movie = rows[randint(0, len(rows) - 1)]  # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º –∏–∑ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö
            send_info(bot, message, random_movie)
        else:
            bot.send_message(message.chat.id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ—Ç —Ñ–∏–ª—å–º–æ–≤ –≤ —ç—Ç–æ–º –∂–∞–Ω—Ä–µ.")
        cur.close()


@bot.message_handler(commands=['favorites'])
def show_favorites(message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    con = sqlite3.connect("movie_database.db")
    con.row_factory = sqlite3.Row
    with con:
        cur = con.cursor()
        cur.execute("SELECT movies.* FROM movies INNER JOIN favorites ON movies.id = favorites.movie_id WHERE favorites.user_id = ?", (message.chat.id,))
        favorites = cur.fetchall()
        cur.close()

        if favorites:
            for row in favorites:
                send_info(bot, message, row)
        else:
            bot.send_message(message.chat.id, "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤.")


@bot.message_handler(func=lambda message: True)
def echo_message(message):
    """–ò—â–µ—Ç —Ñ–∏–ª—å–º –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é."""
    con = sqlite3.connect("movie_database.db")
    con.row_factory = sqlite3.Row
    with con:
        cur = con.cursor()
        cur.execute(f"SELECT * FROM movies WHERE LOWER(title) LIKE '%{message.text.lower()}%'")
        row = cur.fetchall()

        if row:
            if len(row) > 5:
                bot.send_message(message.chat.id, f"–ù–∞–π–¥–µ–Ω–æ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Ñ–∏–ª—å–º–æ–≤ ({len(row)}). –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å.")
            else:
                bot.send_message(message.chat.id, "Of course! I know this movieüòå")
                for movie in row:
                    send_info(bot, message, movie)
        else:
            bot.send_message(message.chat.id, "I don't know this movie üòî")
        cur.close()


if __name__ == '__main__':
    con = sqlite3.connect("movie_database.db")
    with con:
        cur = con.cursor()
        cur.execute("""
            CREATE TABLE IF NOT EXISTS movies (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                img TEXT,
                title TEXT,
                year INTEGER,
                genre TEXT,
                rating REAL,
                overview TEXT
            )
        """)
        cur.execute("""
            CREATE TABLE IF NOT EXISTS favorites (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER NOT NULL,
                movie_id INTEGER NOT NULL
            )
        """)
        con.commit()
        cur.close()

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.infinity_polling()